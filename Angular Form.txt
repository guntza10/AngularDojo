Angular Form 
- เราใช้ angular form เพื่อการ register,login,submit request เป็นต้น
- จะ handle 
    -> Data Biding
    -> Change tracking 
    -> Validation
    -> Error Message
    -> Form submit
-> มี form 2 แบบ
    -> Template Driven Forms (จะจัดการที่ html)
    -> Reactive Forms (จะจัดการที่ class)

*** กลับมาดู part 5 ใหม่ ngModelGroup

Note : 
    -> ทุก input ที่ต้องการ submit data ควรใส่ไว้ใน tag form
    -> ต้องมี button เป็น type submit เพื่อ submit data ทั้งหมดที่อยู่ใน form นี้
    -> import { FormsModule } from '@angular/forms' -> inject ใส่ Imports


Template Driven Forms (TDF) 
- ใช้ Two Way Binding (ngModel)
- สามารถ keep track statement กับ validation
- เหมาะกับการจัดการข้อมูลที่ไม่ได้ซับซ้อน
-> ใช้ ng-directive(ngForm) ให้กับ tag form , angular จะจัดการทำให้ form สามารถ Handle Data Biding,Change tracking,Validation
    Error Message,Form submit ได้
    -> โดยการใช้ template ref var กับ form แล้วใส่ ngForm เข้าไป
    -> แล้วใช้ attribute name กับ ngModel ในการ binding
        -> input type : text -> ได้ค่ามาเป็น string
        -> input type : select -> ได้ค่ามาเป็น string
        -> input type : radio-button -> ได้ค่ามาเป็น string
        -> input type : check-box -> ได้ค่ามาเป็น boolean
-> จัดการที่ html

Tracking state and validity (ดูตัวอย่างที่ app.component.ts)
class (state ของ ngForm) -> บอกเป็น state
 - ng-touched,ng-untouched
    -> เมื่อมีการ click หรือ tap ที่ form control แล้วแตะออกจาก form control หรืออะไรก็แล้วแต่ที่ไปกดที่ form control (ng-untouch -> ng-touch)
 - ng-dirty, ng-pristine
    -> เมื่อ form control มีการเปลี่ยนค่า (ng-pristine -> ng-dirty)
 - ng-valid,ng-invalid (**ต้องมี attribute required ด้วยเพื่อดัก valid ,invalid) 
    -> เมื่อ form-control ไม่มีการกรอก (ng-valid -> ng-invalid)
property(สำหรับ ngModel) -> return เป็น boolean
- touched,untouch
- dirty,pristine
- valid,invalid
Note : 
 ** -> อย่าลืมใส่ required 
    -> ถ้าจะโชว์ valid , invalid ใน view แบบเร็ว ง่ายก็ใช้ bootstrap (แต่ต้องเป็น class form-control) -> .is-invalid,.is-valid

step Template Driven Form
- สร้าง form Html 
- binding ngForm ให้กับ template ref ของ tag form
- binding form-control ใช้ template ref แล้ว ref ถึง ngModel + biding ngModel(กับ property หรือ object)
    -> ngModel เป็นการ bindig data ระหว่าง class กับ html
- ใส่ required ให้กับ tag input ที่เราจะ validate
- ใช้ Class Binding && Style Binding มาช่วยแต่ง css ให้มัน
    -> เช็คกับ template ref ที่เราอ้างถึง ngModel เพื่อใช้  property 
        - touched,untouch
        - dirty,pristine
        - valid,invalid
Note : attribute name หรือ id เอาไว้ ref ตัว element ใน Html (ถ้าเราใช้ ngModel binding แล้วไม่จำเป็นต้องใช้ name หรือ id ก็ได้) -> ในตัวอย่างเราใช้ name เพื่อให้ ngForm ref ถึง
    -> id -> ใช้ ref ถึง element บน html เพื่อให้มัน uniqe (access ผ่าน DOM)
    -> name -> ใช้ ref ถึง element เหมือนกันแต่เป็นในเชิงการส่ง data จาก client ไป server (จะเกี่ยวกับพวก form submit,Http GET POST)
        -> ex. ใน radio button เราใช้ id ให้แต่ละ option ตัวเลือก แต่เราใช้ name binding เป็นตัวเดียวกันหมดเพื่อเป็นตัวเก็บค่าที่ได้จากตัวเลือก radio button ที่จะ submit ใน form 
    -> template reference variable กับ id ต่างกัน
        -> template ref ใช้ binding data ของ element
        -> id ใช้ ref จัดการเกี่ยวกับ style css